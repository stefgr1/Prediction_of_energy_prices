# %% Import the OIL csv file and processing it

import csv
import sys
import os
import pandas as pd
import numpy as np
from forex_python.converter import CurrencyRates
from pathlib import Path

# %% Set the path to the file
home_directory = Path(os.path.expanduser('~')) / 'Documents' / \
    'Masterarbeit' / 'Prediction_of_energy_prices'
os.chdir(home_directory)
file_path = home_directory / 'data' / \
    'Oil_price_brent' / 'storage' / 'Brent_oil.csv'

# %%
# Define the function to read the csv file
df = pd.read_csv(file_path)

# %% Rename the columns to English
df.columns = ['Date', 'Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']

# %%
# Drop all columns ecxept for the date and the closing price
df = df[['Date', 'Close']]
# %%
# Convert the 'Datum' column to datetime format
df["Date"] = pd.to_datetime(df["Date"], format="%d.%m.%Y")

# Sort the DataFrame by date in ascending order
df = df.sort_values(by="Date")

# Set the 'Datum' column as the index
df.set_index("Date", inplace=True)

# Change the close column to "Oil price (USD)"
df.rename(columns={"Close": "Oil price (USD)"}, inplace=True)
df['Oil price (USD)'] = pd.to_numeric(
    df['Oil price (USD)'].str.replace(',', '.'), errors='coerce')

# %%
# Create a date range from January 1, 2006, to March 31, 2024
date_range = pd.date_range(start='2005-12-30', end='2024-03-31')

# Reindex the DataFrame to this date range, introducing NaN values for missing dates
df = df.reindex(date_range)

# %%
# Resample the DataFrame to have a row for each day, introducing NaN values for missing dates
df = df.resample('D').mean()

# Use linear interpolation to fill NaN values
df['Oil price (USD)'] = df['Oil price (USD)'].interpolate(method='linear')

# %%
# Drop the first two rows of the DataFrame
df = df.iloc[2:]

# Now convert to Euro
c = CurrencyRates()
usd_to_eur_rate = c.get_rate('USD', 'EUR')  # Fetch the exchange rate once

# Apply the exchange rate to convert USD prices to EUR
df['Oil price (EUR)'] = df['Oil price (USD)'] * usd_to_eur_rate
df.drop(columns='Oil price (USD)', inplace=True)

# reduce number of decimal places to two
df = df.round(2)

# Convert index back to own date column
df.reset_index(inplace=True)
# Rename the column to 'Date'
df.rename(columns={'index': 'Date'}, inplace=True)

# %% Save the DataFrame to a new csv file
df.to_csv(home_directory / 'data' / 'Oil_price_brent' /
          'Brent_oil_cleaned.csv', index=False)
